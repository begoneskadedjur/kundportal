// 游늬 api/ruttplanerare/get-abax-vehicles.ts
// En funktion f칬r att lista alla fordon och deras ID:n fr친n ABAX.
// Anv칛nds f칬r att enkelt kunna koppla tekniker till fordon i databasen.

import { VercelRequest, VercelResponse } from '@vercel/node';
import fetch from 'node-fetch';

// --- HJ츿LPFUNKTION F칐R ABAX API ---
async function getAbaxToken() {
    // Samma bepr칬vade funktion f칬r att h칛mta en token
    const response = await fetch('https://identity.abax.cloud/connect/token', {
        method: 'POST',
        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },
        body: new URLSearchParams({
            grant_type: 'client_credentials',
            client_id: process.env.ABAX_CLIENT_ID!,
            client_secret: process.env.ABAX_CLIENT_SECRET!,
            scope: 'open_api open_api.vehicles',
        }),
    });
    if (!response.ok) {
        console.error("ABAX Token Error:", await response.text());
        throw new Error('Kunde inte h칛mta ABAX token. Kontrollera ABAX_CLIENT_ID och ABAX_CLIENT_SECRET i Vercel.');
    }
    const data = await response.json() as { access_token: string };
    return data.access_token;
}

// --- HUVUDFUNKTION ---
export default async function handler(req: VercelRequest, res: VercelResponse) {
    // Denna funktion 칛r designad f칬r att vara enkel och s칛ker,
    // s친 vi till친ter bara GET-f칬rfr친gningar.
    if (req.method !== 'GET') {
        return res.status(405).json({ error: 'Endast GET-f칬rfr친gningar 칛r till친tna f칬r denna endpoint.' });
    }

    try {
        console.log("F칬rs칬ker h칛mta ABAX token f칬r att lista fordon...");
        const abaxToken = await getAbaxToken();
        console.log("Token mottagen, h칛mtar fordonslista...");

        // Anropar ABAX endpoint f칬r att h칛mta en lista 칬ver alla fordon
        const vehiclesResponse = await fetch('https://api.abax.cloud/v1/vehicles', {
            headers: { Authorization: `Bearer ${abaxToken}` },
        });

        if (!vehiclesResponse.ok) {
            const errorText = await vehiclesResponse.text();
            console.error("Fel vid anrop till ABAX fordons-API:", errorText);
            throw new Error(`Kunde inte h칛mta fordonslistan fr친n ABAX. Servern svarade med status: ${vehiclesResponse.status}`);
        }

        const vehiclesData = await vehiclesResponse.json() as { items: any[] };
        
        // Plockar ut bara den mest relevanta informationen f칬r att g칬ra listan ren och tydlig
        const simplifiedVehicles = vehiclesData.items.map(vehicle => ({
            id: vehicle.id,
            alias: vehicle.alias || 'Inget alias',
            license_plate: vehicle.license_plate?.number || 'Ok칛nt regnr',
            driver: vehicle.driver?.name || 'Ingen f칬rare kopplad'
        }));
        
        console.log(`Hittade ${simplifiedVehicles.length} fordon.`);

        // Skicka tillbaka den f칬renklade listan som ett JSON-svar
        res.status(200).json(simplifiedVehicles);

    } catch (error: any) {
        console.error("Ett allvarligt fel intr칛ffade i get-abax-vehicles:", error);
        // Skicka ett mer informativt felmeddelande till klienten
        res.status(500).json({ 
            error: "Ett internt serverfel intr칛ffade.",
            details: error.message 
        });
    }
}