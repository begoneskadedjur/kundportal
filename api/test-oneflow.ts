// api/test-oneflow.ts - AVANCERAD VERSION F√ñR ATT MAPPA KONTOT
import type { VercelRequest, VercelResponse } from '@vercel/node';

// --- HJ√ÑLPAR-FUNKTION F√ñR API-ANROP ---
async function oneflowFetch(endpoint: string, token: string) {
    const API_URL = process.env.ONEFLOW_API_URL || 'https://api.oneflow.com/v1';
    
    console.log(`...anropar Oneflow endpoint: ${endpoint}`);
    const response = await fetch(`${API_URL}${endpoint}`, {
        headers: {
            'x-oneflow-api-token': token,
            'Content-Type': 'application/json',
            'Accept': 'application/json'
        }
    });

    if (!response.ok) {
        const errorText = await response.text();
        console.error(`‚ùå Fel fr√•n Oneflow API: ${response.status} - ${errorText}`);
        throw new Error(`Oneflow API Error: ${response.status}`);
    }
    
    console.log(`‚úÖ Svar mottaget fr√•n ${endpoint}`);
    return response.json();
}

// --- HUVUDFUNKTION (HANDLER) ---
export default async function handler(req: VercelRequest, res: VercelResponse) {
    res.setHeader('Access-Control-Allow-Origin', '*');
    res.setHeader('Access-Control-Allow-Methods', 'GET, OPTIONS');
    res.setHeader('Access-Control-Allow-Headers', 'Content-Type');

    if (req.method === 'OPTIONS') { return res.status(204).end(); }

    try {
        const ONEFLOW_API_TOKEN = process.env.ONEFLOW_API_TOKEN;
        if (!ONEFLOW_API_TOKEN) { throw new Error('Milj√∂variabeln ONEFLOW_API_TOKEN √§r inte satt.'); }

        const { templateId, contractId } = req.query;

        if (contractId) {
            // --- L√ÑGE 1: VIKTIGAST! Unders√∂k ett existerande kontrakt ---
            console.log(`üß™ Diagnosl√§ge: Visar detaljer f√∂r kontrakt-ID ${contractId}...`);
            const data = await oneflowFetch(`/contracts/${contractId}`, ONEFLOW_API_TOKEN);

            // Plocka ut ALLA typer av data f√∂r att f√• en komplett bild
            const result = {
                contract_info: {
                    id: data.id,
                    name: data.name,
                    state: data.state,
                },
                participants: data.participants?.map((p: any) => ({
                    name: p.name,
                    email: p.email,
                    company_name: p.company_name, // Detta fyller i "F√∂retag"-f√§ltet
                    organization_number: p.organization_number, // Detta fyller i "Org nr"-f√§ltet
                    is_signer: p.is_signer
                })) || [],
                // Detta √§r de "Fria Dataf√§lten" vi letar efter!
                data_fields: data.data_fields?.map((df: any) => ({
                    key: df.key, // Detta √§r det VIKTIGA namnet att anv√§nda i koden
                    value: df.value
                })) || []
            };

            return res.status(200).json({
                success: true,
                message: `Komplett analys av kontraktet "${data.name}". Anv√§nd denna data f√∂r att bygga ditt API-anrop.`,
                analysis: result
            });

        } else if (templateId) {
            // --- L√ÑGE 2: Unders√∂k en mall (som vi ser kan vara vilseledande) ---
            console.log(`üß™ Diagnosl√§ge: Visar detaljer f√∂r mall-ID ${templateId}...`);
            const data = await oneflowFetch(`/templates/${templateId}`, ONEFLOW_API_TOKEN);
            
            const dataFields = data.data_fields?.map((df: any) => ({
                key: df.key, type: df.type,
            })) || [];

            return res.status(200).json({
                success: true,
                message: `Detaljer f√∂r mallen "${data.name}".`,
                template: { id: data.id, name: data.name },
                api_reported_data_fields: dataFields
            });
        } else {
            return res.status(400).json({ success: false, error: "Ange antingen ?contractId=... eller ?templateId=... i URL:en." });
        }

    } catch (error) {
        return res.status(500).json({
            success: false,
            error: error instanceof Error ? error.message : 'Ok√§nt fel'
        });
    }
}